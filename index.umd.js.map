{"version":3,"file":"index.umd.js","sources":["index.js"],"sourcesContent":["import net from 'node:net';\nimport os from 'node:os';\n\nclass Locked extends Error {\n\tconstructor(port) {\n\t\tsuper(`${port} is locked`);\n\t}\n}\n\nconst lockedPorts = {\n\told: new Set(),\n\tyoung: new Set(),\n};\n\n// On this interval, the old locked ports are discarded,\n// the young locked ports are moved to old locked ports,\n// and a new young set for locked ports are created.\nconst releaseOldLockedPortsIntervalMs = 1000 * 15;\n\nconst minPort = 1024;\nconst maxPort = 65_535;\n\n// Lazily create timeout on first use\nlet timeout;\n\nconst getLocalHosts = () => {\n\tconst interfaces = os.networkInterfaces();\n\n\t// Add undefined value for createServer function to use default host,\n\t// and default IPv4 host in case createServer defaults to IPv6.\n\tconst results = new Set([undefined, '0.0.0.0']);\n\n\tfor (const _interface of Object.values(interfaces)) {\n\t\tfor (const config of _interface) {\n\t\t\tresults.add(config.address);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nconst checkAvailablePort = options =>\n\tnew Promise((resolve, reject) => {\n\t\tconst server = net.createServer();\n\t\tserver.unref();\n\t\tserver.on('error', reject);\n\n\t\tserver.listen(options, () => {\n\t\t\tconst {port} = server.address();\n\t\t\tserver.close(() => {\n\t\t\t\tresolve(port);\n\t\t\t});\n\t\t});\n\t});\n\nconst getAvailablePort = async (options, hosts) => {\n\tif (options.host || options.port === 0) {\n\t\treturn checkAvailablePort(options);\n\t}\n\n\tfor (const host of hosts) {\n\t\ttry {\n\t\t\tawait checkAvailablePort({port: options.port, host}); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tif (!['EADDRNOTAVAIL', 'EINVAL'].includes(error.code)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn options.port;\n};\n\nconst portCheckSequence = function * (ports) {\n\tif (ports) {\n\t\tyield * ports;\n\t}\n\n\tyield 0; // Fall back to 0 if anything else failed\n};\n\nexport default async function getPorts(options) {\n\tlet ports;\n\tlet exclude = new Set();\n\n\tif (options) {\n\t\tif (options.port) {\n\t\t\tports = typeof options.port === 'number' ? [options.port] : options.port;\n\t\t}\n\n\t\tif (options.exclude) {\n\t\t\tconst excludeIterable = options.exclude;\n\n\t\t\tif (typeof excludeIterable[Symbol.iterator] !== 'function') {\n\t\t\t\tthrow new TypeError('The `exclude` option must be an iterable.');\n\t\t\t}\n\n\t\t\tfor (const element of excludeIterable) {\n\t\t\t\tif (typeof element !== 'number') {\n\t\t\t\t\tthrow new TypeError('Each item in the `exclude` option must be a number corresponding to the port you want excluded.');\n\t\t\t\t}\n\n\t\t\t\tif (!Number.isSafeInteger(element)) {\n\t\t\t\t\tthrow new TypeError(`Number ${element} in the exclude option is not a safe integer and can't be used`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\texclude = new Set(excludeIterable);\n\t\t}\n\t}\n\n\tif (timeout === undefined) {\n\t\ttimeout = setTimeout(() => {\n\t\t\ttimeout = undefined;\n\n\t\t\tlockedPorts.old = lockedPorts.young;\n\t\t\tlockedPorts.young = new Set();\n\t\t}, releaseOldLockedPortsIntervalMs);\n\n\t\t// Does not exist in some environments (Electron, Jest jsdom env, browser, etc).\n\t\tif (timeout.unref) {\n\t\t\ttimeout.unref();\n\t\t}\n\t}\n\n\tconst hosts = getLocalHosts();\n\n\tfor (const port of portCheckSequence(ports)) {\n\t\ttry {\n\t\t\tif (exclude.has(port)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet availablePort = await getAvailablePort({...options, port}, hosts); // eslint-disable-line no-await-in-loop\n\t\t\twhile (lockedPorts.old.has(availablePort) || lockedPorts.young.has(availablePort)) {\n\t\t\t\tif (port !== 0) {\n\t\t\t\t\tthrow new Locked(port);\n\t\t\t\t}\n\n\t\t\t\tavailablePort = await getAvailablePort({...options, port}, hosts); // eslint-disable-line no-await-in-loop\n\t\t\t}\n\n\t\t\tlockedPorts.young.add(availablePort);\n\n\t\t\treturn availablePort;\n\t\t} catch (error) {\n\t\t\tif (!['EADDRINUSE', 'EACCES'].includes(error.code) && !(error instanceof Locked)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('No available ports found');\n}\n\nexport function portNumbers(from, to) {\n\tif (!Number.isInteger(from) || !Number.isInteger(to)) {\n\t\tthrow new TypeError('`from` and `to` must be integer numbers');\n\t}\n\n\tif (from < minPort || from > maxPort) {\n\t\tthrow new RangeError(`'from' must be between ${minPort} and ${maxPort}`);\n\t}\n\n\tif (to < minPort || to > maxPort) {\n\t\tthrow new RangeError(`'to' must be between ${minPort} and ${maxPort}`);\n\t}\n\n\tif (from > to) {\n\t\tthrow new RangeError('`to` must be greater than or equal to `from`');\n\t}\n\n\tconst generator = function * (from, to) {\n\t\tfor (let port = from; port <= to; port++) {\n\t\t\tyield port;\n\t\t}\n\t};\n\n\treturn generator(from, to);\n}\n"],"names":["_catch","body","recover","result","e","then","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","timeout","Locked","_Error","port","call","_wrapNativeSuper","Error","lockedPorts","old","Set","young","maxPort","checkAvailablePort","options","Promise","resolve","reject","server","net","createServer","unref","on","listen","address","close","getAvailablePort","hosts","_temp2","_result2","_exit","host","_temp","target","check","step","_cycle","next","done","_fixup","TypeError","values","i","length","push","array","_forTo","_forOf","error","includes","code","portCheckSequence","_regeneratorRuntime","mark","_callee","ports","wrap","_callee$","_context","prev","delegateYield","stop","_temp6","_exit2","excludeIterable","_iterator2","_step2","element","_iterator3","_step3","availablePort","_result5","exclude","_createForOfIteratorHelperLoose","Number","isSafeInteger","undefined","setTimeout","interfaces","os","networkInterfaces","results","_i","_Object$values","Object","_step","_iterator","add","getLocalHosts","_temp5","_for","has","_extends","_getAvailablePort","_temp4","_result4","_temp3","_exit3","_getAvailablePort2","from","to","isInteger","RangeError","_callee2","_callee2$","_context2","generator"],"mappings":"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"}