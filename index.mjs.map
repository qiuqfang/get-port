{"version":3,"file":"index.mjs","sources":["index.js"],"sourcesContent":["import net from 'node:net';\nimport os from 'node:os';\n\nclass Locked extends Error {\n\tconstructor(port) {\n\t\tsuper(`${port} is locked`);\n\t}\n}\n\nconst lockedPorts = {\n\told: new Set(),\n\tyoung: new Set(),\n};\n\n// On this interval, the old locked ports are discarded,\n// the young locked ports are moved to old locked ports,\n// and a new young set for locked ports are created.\nconst releaseOldLockedPortsIntervalMs = 1000 * 15;\n\nconst minPort = 1024;\nconst maxPort = 65_535;\n\n// Lazily create timeout on first use\nlet timeout;\n\nconst getLocalHosts = () => {\n\tconst interfaces = os.networkInterfaces();\n\n\t// Add undefined value for createServer function to use default host,\n\t// and default IPv4 host in case createServer defaults to IPv6.\n\tconst results = new Set([undefined, '0.0.0.0']);\n\n\tfor (const _interface of Object.values(interfaces)) {\n\t\tfor (const config of _interface) {\n\t\t\tresults.add(config.address);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nconst checkAvailablePort = options =>\n\tnew Promise((resolve, reject) => {\n\t\tconst server = net.createServer();\n\t\tserver.unref();\n\t\tserver.on('error', reject);\n\n\t\tserver.listen(options, () => {\n\t\t\tconst {port} = server.address();\n\t\t\tserver.close(() => {\n\t\t\t\tresolve(port);\n\t\t\t});\n\t\t});\n\t});\n\nconst getAvailablePort = async (options, hosts) => {\n\tif (options.host || options.port === 0) {\n\t\treturn checkAvailablePort(options);\n\t}\n\n\tfor (const host of hosts) {\n\t\ttry {\n\t\t\tawait checkAvailablePort({port: options.port, host}); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tif (!['EADDRNOTAVAIL', 'EINVAL'].includes(error.code)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn options.port;\n};\n\nconst portCheckSequence = function * (ports) {\n\tif (ports) {\n\t\tyield * ports;\n\t}\n\n\tyield 0; // Fall back to 0 if anything else failed\n};\n\nexport default async function getPorts(options) {\n\tlet ports;\n\tlet exclude = new Set();\n\n\tif (options) {\n\t\tif (options.port) {\n\t\t\tports = typeof options.port === 'number' ? [options.port] : options.port;\n\t\t}\n\n\t\tif (options.exclude) {\n\t\t\tconst excludeIterable = options.exclude;\n\n\t\t\tif (typeof excludeIterable[Symbol.iterator] !== 'function') {\n\t\t\t\tthrow new TypeError('The `exclude` option must be an iterable.');\n\t\t\t}\n\n\t\t\tfor (const element of excludeIterable) {\n\t\t\t\tif (typeof element !== 'number') {\n\t\t\t\t\tthrow new TypeError('Each item in the `exclude` option must be a number corresponding to the port you want excluded.');\n\t\t\t\t}\n\n\t\t\t\tif (!Number.isSafeInteger(element)) {\n\t\t\t\t\tthrow new TypeError(`Number ${element} in the exclude option is not a safe integer and can't be used`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\texclude = new Set(excludeIterable);\n\t\t}\n\t}\n\n\tif (timeout === undefined) {\n\t\ttimeout = setTimeout(() => {\n\t\t\ttimeout = undefined;\n\n\t\t\tlockedPorts.old = lockedPorts.young;\n\t\t\tlockedPorts.young = new Set();\n\t\t}, releaseOldLockedPortsIntervalMs);\n\n\t\t// Does not exist in some environments (Electron, Jest jsdom env, browser, etc).\n\t\tif (timeout.unref) {\n\t\t\ttimeout.unref();\n\t\t}\n\t}\n\n\tconst hosts = getLocalHosts();\n\n\tfor (const port of portCheckSequence(ports)) {\n\t\ttry {\n\t\t\tif (exclude.has(port)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet availablePort = await getAvailablePort({...options, port}, hosts); // eslint-disable-line no-await-in-loop\n\t\t\twhile (lockedPorts.old.has(availablePort) || lockedPorts.young.has(availablePort)) {\n\t\t\t\tif (port !== 0) {\n\t\t\t\t\tthrow new Locked(port);\n\t\t\t\t}\n\n\t\t\t\tavailablePort = await getAvailablePort({...options, port}, hosts); // eslint-disable-line no-await-in-loop\n\t\t\t}\n\n\t\t\tlockedPorts.young.add(availablePort);\n\n\t\t\treturn availablePort;\n\t\t} catch (error) {\n\t\t\tif (!['EADDRINUSE', 'EACCES'].includes(error.code) && !(error instanceof Locked)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('No available ports found');\n}\n\nexport function portNumbers(from, to) {\n\tif (!Number.isInteger(from) || !Number.isInteger(to)) {\n\t\tthrow new TypeError('`from` and `to` must be integer numbers');\n\t}\n\n\tif (from < minPort || from > maxPort) {\n\t\tthrow new RangeError(`'from' must be between ${minPort} and ${maxPort}`);\n\t}\n\n\tif (to < minPort || to > maxPort) {\n\t\tthrow new RangeError(`'to' must be between ${minPort} and ${maxPort}`);\n\t}\n\n\tif (from > to) {\n\t\tthrow new RangeError('`to` must be greater than or equal to `from`');\n\t}\n\n\tconst generator = function * (from, to) {\n\t\tfor (let port = from; port <= to; port++) {\n\t\t\tyield port;\n\t\t}\n\t};\n\n\treturn generator(from, to);\n}\n"],"names":["_catch","body","recover","result","e","then","getPorts","options","_temp6","_exit2","excludeIterable","_iterator2","_step2","element","_iterator3","_step3","port","availablePort","ports","_result5","Error","exclude","Set","Symbol","iterator","TypeError","_createForOfIteratorHelperLoose","done","value","Number","isSafeInteger","undefined","timeout","setTimeout","lockedPorts","old","young","releaseOldLockedPortsIntervalMs","unref","hosts","getLocalHosts","portCheckSequence","_temp5","_for","has","Promise","resolve","getAvailablePort","_extends","_getAvailablePort","_temp4","_result4","add","_temp3","_exit3","Locked","_getAvailablePort2","error","includes","code","reject","_iteratorSymbol","_settle","pact","state","s","_Pact","o","bind","v","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_Error","call","_wrapNativeSuper","maxPort","interfaces","os","networkInterfaces","results","_i","_Object$values","Object","values","length","_step","_iterator","address","checkAvailablePort","server","net","createServer","on","listen","close","_temp2","_result2","_exit","host","_temp","target","check","step","_cycle","next","_fixup","i","push","array","_forTo","_forOf","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","delegateYield","stop","portNumbers","from","to","isInteger","RangeError","generator","_callee2","_callee2$","_context2"],"mappings":"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"}